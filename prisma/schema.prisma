generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
  BLOCKED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String?
  password   String
  avatarUrl  String?
  role       UserRole  @default(USER)
  isActive   Boolean   @default(true)
  isDeleted  Boolean   @default(false)
  projects   Project[]
  tasks      Task[]
  comments   Comment[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  ownerId     Int
  owner       User      @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  tasks       Task[]
  isDeleted   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([ownerId, name])
}

model Task {
  id          Int         @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus  @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?
  projectId   Int
  project     Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  assigneeId  Int?
  assignee    User?       @relation(fields: [assigneeId], references: [id], onDelete: SetNull)
  comments    Comment[]
  isDeleted   Boolean     @default(false)
  isArchived  Boolean      @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([status])
  @@index([priority])
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  taskId    Int
  task      Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  isDeleted Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
