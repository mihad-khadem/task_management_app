// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String
  projects  Project[] // user can create multiple projects
  tasks     Task[]    // user assigned to tasks
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  ownerId     Int
  owner       User      @relation(fields: [ownerId], references: [id])
  tasks       Task[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus  @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?
  projectId   Int
  project     Project    @relation(fields: [projectId], references: [id])
  assigneeId  Int?
  assignee    User?      @relation(fields: [assigneeId], references: [id])
  comments    Comment[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
  BLOCKED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}
